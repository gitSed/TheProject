{"version":3,"sources":["components/AddCategory/index.js","components/GifGrid/GifGridItem/index.js","helpers/getGifs.js","components/GifGrid/index.js","hooks/useFetchGifs.js","App.js","index.js"],"names":["AddCategory","handleAdd","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","giphyURL","encodeURI","fetch","then","resp","json","data","gifs","map","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","imgs","useFetchGifs","img","key","App","categories","setCategories","prev","style","padding","width","cat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMA8BeA,EA3BK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACDC,mBAAS,IADR,mBAC9BC,EAD8B,KAClBC,EADkB,KAgBrC,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,EAAUE,GACVC,EAAc,OAMd,2BAAOM,KAAK,OAAOC,MAAOR,EAAYS,SAfhB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3BT,EAAcS,EAAOF,YCIVG,EATK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAChC,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNGK,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACfC,EADe,0FAC+EC,UAClGH,GAFmB,sBAKEI,MAAMF,GAAUG,MAAK,SAACC,GAAD,OAAUA,EAAKC,UALtC,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,kBAA2D,CAC/EjB,GADoB,EAAGA,GAEvBC,MAFoB,EAAOA,MAG3BC,IAHoB,EAAcgB,OAAUC,iBAAoBjB,QAP7C,kBAadc,GAbc,2CAAH,sDCuBLI,EAjBC,SAAC,GAAwC,IAAtCb,EAAqC,EAArCA,SAAqC,ECH5B,SAAC,GAAwC,IAAtCA,EAAqC,EAArCA,SAAqC,EACxCpB,mBAAS,CACjC4B,KAAM,GACNM,SAAS,IAHuD,mBAC3DC,EAD2D,KACpDC,EADoD,KAelE,OATAC,qBAAU,WACRlB,EAAQC,GAAUK,MAAK,SAACa,GAAD,OACrBF,EAAS,CACPR,KAAK,YAAKU,GACVJ,SAAS,SAGZ,CAACd,IAEGe,EDX2BI,CAAa,CAAEnB,aAAnCW,EADwC,EAC9CH,KAAcM,EADgC,EAChCA,QAEtB,OACE,oCACGA,GAAW,wBAAIlB,UAAU,oCAAd,cAEZ,yBAAKA,UAAU,aACb,wBAAIA,UAAU,qCAAqCI,GAClDW,EAAOD,KAAI,SAACU,GAAD,OACV,kBAAC,EAAD,eAAaC,IAAKD,EAAI3B,IAAQ2B,UEWzBE,EArBH,WAAO,IAAD,EACoB1C,mBAAS,CAAC,cAD9B,mBACT2C,EADS,KACGC,EADH,KAOhB,OACE,oCACE,yCACA,kBAAC,EAAD,CAAa7C,UAPC,SAACU,GACjBmC,GAAc,SAACC,GAAD,OAAWpC,GAAX,mBAAqBoC,UAQjC,wBAAIC,MAAO,CAAEC,QAAS,EAAGC,MAAO,SAC7BL,EAAWb,KAAI,SAACmB,GAAD,OACd,kBAAC,EAAD,CAASR,IAAKQ,EAAK7B,SAAU6B,UCfvCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.7e21e3e3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ handleAdd }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setInputValue(target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      handleAdd(inputValue);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  handleAdd: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (category) => {\r\n  const giphyURL = `https://api.giphy.com/v1/gifs/search?api_key=gcxBZU55DYxqzyUQbDYHn1UuZ5JySJTx&q=${encodeURI(\r\n    category,\r\n  )}&limit=10`;\r\n\r\n  const { data } = await fetch(giphyURL).then((resp) => resp.json());\r\n\r\n  const gifs = data.map(({ id, title, images: { downsized_medium: { url } } }) => ({\r\n    id,\r\n    title,\r\n    url,\r\n  }));\r\n\r\n  return gifs;\r\n};\r\n","import React from 'react';\r\n\r\n/* Own */\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }: { category: string }) => {\r\n  const { data: images, loading } = useFetchGifs({ category });\r\n\r\n  return (\r\n    <>\r\n      {loading && <h1 className=\"animate__animated animate__flash\">Loading...</h1>}\r\n\r\n      <div className=\"card-grid\">\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ({ category }: { category: string }) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) =>\r\n      setstate({\r\n        data: [...imgs],\r\n        loading: false,\r\n      }),\r\n    );\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from 'react';\r\n\r\n/* Own */\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst App = () => {\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  const handleAdd = (value) => {\r\n    setCategories((prev) => [value, ...prev]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>GifExpert</h1>\r\n      <AddCategory handleAdd={handleAdd} />\r\n\r\n      <ol style={{ padding: 0, width: '100%' }}>\r\n        {categories.map((cat) => (\r\n          <GifGrid key={cat} category={cat} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}